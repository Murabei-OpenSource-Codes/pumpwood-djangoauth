# Generated by Django 3.2.6 on 2022-01-19 21:06

from django.db import migrations, models
import django.db.models.deletion
import pumpwood_communication.serializers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='KongService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_url', models.CharField(help_text='service url to redirect the http calls.', max_length=100, unique=True)),
                ('service_name', models.TextField(help_text='name of the service (must be unique).', max_length=100, unique=True)),
                ('service_kong_id', models.TextField(help_text='id of the service on kong.', unique=True)),
                ('description', models.TextField(help_text='short description for the service (must be unique).', unique=True)),
                ('notes', models.TextField(blank=True, default='', help_text='long description for the service.')),
                ('healthcheck_route', models.TextField(help_text='path to health check if the service is avaiable.', null=True, unique=True)),
                ('dimentions', models.JSONField(default=dict, encoder=pumpwood_communication.serializers.PumpWoodJSONEncoder, help_text='dictionary of tags to help organization')),
                ('icon', models.TextField(blank=True, help_text='icon to be used on front-end.', null=True)),
                ('extra_info', models.JSONField(blank=True, default=dict, encoder=pumpwood_communication.serializers.PumpWoodJSONEncoder, help_text='other information that can be usefull for this service')),
            ],
            options={
                'db_table': 'pumpwood__service',
            },
        ),
        migrations.CreateModel(
            name='KongRoute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('route_url', models.CharField(help_text='service associated with the route (must be unique).', max_length=100, unique=True)),
                ('route_name', models.CharField(help_text='name of the route (must be unique).', max_length=100, unique=True)),
                ('route_kong_id', models.TextField(help_text='route identification on Kong', unique=True)),
                ('route_type', models.CharField(choices=[('endpoint', 'Object End-Point'), ('aux', 'Auxiliar End-Point'), ('gui', 'User Interface'), ('static', 'Static Files'), ('admin', 'Admin site')], help_text='type of the route [endpoint, aux, gui, static, admin]', max_length=10)),
                ('description', models.TextField(help_text='a short description of the route.', unique=True)),
                ('notes', models.TextField(blank=True, default='', help_text='a long description of the route.')),
                ('dimentions', models.JSONField(default=dict, encoder=pumpwood_communication.serializers.PumpWoodJSONEncoder, help_text='dictionary of tags to help organization')),
                ('icon', models.TextField(blank=True, help_text='icon to be used on front-end.', null=True)),
                ('extra_info', models.JSONField(blank=True, default=dict, encoder=pumpwood_communication.serializers.PumpWoodJSONEncoder, help_text='other information that can be usefull for this route')),
                ('service', models.ForeignKey(help_text='service associated with the route.', on_delete=django.db.models.deletion.CASCADE, related_name='route_set', to='system.kongservice')),
            ],
            options={
                'db_table': 'pumpwood__route',
                'unique_together': {('service', 'route_name')},
            },
        ),
    ]
