# Generated by Django 3.2.6 on 2024-03-11 17:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import pumpwood_communication.serializers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('system', '0011_add_order'),
    ]

    operations = [
        migrations.CreateModel(
            name='PumpwoodPermissionGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(help_text='A short description of the route.', unique=True, verbose_name='Description')),
                ('notes', models.TextField(blank=True, default='', help_text='A long description of the route.', verbose_name='Notes')),
                ('dimensions', models.JSONField(default=dict, encoder=pumpwood_communication.serializers.PumpWoodJSONEncoder, help_text='Dictionary of tags to help organization', verbose_name='Dimentions')),
                ('extra_info', models.JSONField(blank=True, default=dict, encoder=pumpwood_communication.serializers.PumpWoodJSONEncoder, help_text='Other information that can be usefull', verbose_name='Extra info.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Updated At', verbose_name='Updated At')),
                ('updated_by', models.ForeignKey(blank=True, help_text='Updated By', on_delete=django.db.models.deletion.CASCADE, related_name='permission_group_updated_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Permission Group',
                'verbose_name_plural': 'Permission Groups',
                'db_table': 'api_permission__group',
            },
        ),
        migrations.CreateModel(
            name='PumpwoodPermissionPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(help_text='A short description of the route.', unique=True, verbose_name='Description')),
                ('notes', models.TextField(blank=True, default='', help_text='A long description of the route.', verbose_name='Notes')),
                ('dimensions', models.JSONField(default=dict, encoder=pumpwood_communication.serializers.PumpWoodJSONEncoder, help_text='Dictionary of tags to help organization', verbose_name='Dimentions')),
                ('list', models.TextField(choices=[('allow', 'Allow'), ('deny', 'Deny'), ('no_change', 'No change')], default='no_change', help_text='Permission to list end-point and front-end page', verbose_name='List')),
                ('list_without_pag', models.TextField(choices=[('allow', 'Allow'), ('deny', 'Deny'), ('no_change', 'No change')], default='no_change', help_text='Permission to list without pagination end-point. Return all values associated with query (list paginate 50)', verbose_name='List Without Pag.')),
                ('retrieve', models.TextField(choices=[('allow', 'Allow'), ('deny', 'Deny'), ('no_change', 'No change')], default='no_change', help_text='Permission to retrieve end-point and front-end page', verbose_name='Retrieve')),
                ('retrieve_file', models.TextField(choices=[('allow', 'Allow'), ('deny', 'Deny'), ('no_change', 'No change')], default='no_change', help_text='Permission to retrieve file end-point', verbose_name='Retrieve File')),
                ('delete', models.TextField(choices=[('allow', 'Allow'), ('deny', 'Deny'), ('no_change', 'No change')], default='no_change', help_text='Permission to delete object end-point and front-end page', verbose_name='Delete')),
                ('delete_many', models.TextField(choices=[('allow', 'Allow'), ('deny', 'Deny'), ('no_change', 'No change')], default='no_change', help_text='Permission to delete many end-point', verbose_name='Delete Many')),
                ('delete_file', models.TextField(choices=[('allow', 'Allow'), ('deny', 'Deny'), ('no_change', 'No change')], default='no_change', help_text='Permission to delelte file end-point', verbose_name='Delete File')),
                ('save', models.TextField(choices=[('allow', 'Allow'), ('deny', 'Deny'), ('no_change', 'No change')], default='no_change', help_text='Permission to save end-point and front-end page', verbose_name='Save')),
                ('actions', models.TextField(choices=[('allow', 'Allow'), ('deny', 'Deny'), ('custom', 'Custom'), ('no_change', 'No change')], default='no_change', help_text='Permission to run actions', verbose_name='Actions')),
                ('extra_info', models.JSONField(blank=True, default=dict, encoder=pumpwood_communication.serializers.PumpWoodJSONEncoder, help_text='Other information that can be usefull', verbose_name='Extra info.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Updated At', verbose_name='Updated At')),
                ('route', models.ForeignKey(help_text='Route associated with permission.', on_delete=django.db.models.deletion.CASCADE, related_name='permission_set', to='system.kongroute', verbose_name='Route')),
                ('updated_by', models.ForeignKey(blank=True, help_text='Updated By', on_delete=django.db.models.deletion.CASCADE, related_name='policy_updated_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Permission Policy',
                'verbose_name_plural': 'Permission Policies',
                'db_table': 'api_permission__policy',
            },
        ),
        migrations.CreateModel(
            name='PumpwoodPermissionUserGroupM2M',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extra_info', models.JSONField(blank=True, default=dict, encoder=pumpwood_communication.serializers.PumpWoodJSONEncoder, help_text='Other information that can be usefull', verbose_name='Extra info.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Updated At', verbose_name='Updated At')),
                ('group', models.ForeignKey(help_text='Permission Group to apply policy', on_delete=django.db.models.deletion.CASCADE, related_name='group_user_set', to='api_permission.pumpwoodpermissiongroup', verbose_name='Group')),
                ('updated_by', models.ForeignKey(blank=True, help_text='Updated By', on_delete=django.db.models.deletion.CASCADE, related_name='permission_user_group_updated_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
                ('user', models.ForeignKey(help_text='User associated with group', on_delete=django.db.models.deletion.CASCADE, related_name='api_permission_group_set', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Permission User -> Group',
                'verbose_name_plural': 'Permission User -> Group',
                'db_table': 'api_permission__user_group_m2m',
                'unique_together': {('user', 'group')},
            },
        ),
        migrations.CreateModel(
            name='PumpwoodPermissionPolicyUserM2M',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('general_policy', models.TextField(choices=[('read', 'Read'), ('write', 'Write'), ('custom', 'Custom')], default='no_change', help_text='Read/Write general policy', verbose_name='General Permission')),
                ('extra_info', models.JSONField(blank=True, default=dict, encoder=pumpwood_communication.serializers.PumpWoodJSONEncoder, help_text='Other information that can be usefull', verbose_name='Extra info.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Updated At', verbose_name='Updated At')),
                ('custom_policy', models.ForeignKey(help_text='Custom policy that will be applied to the group', on_delete=django.db.models.deletion.CASCADE, related_name='group_set', to='api_permission.pumpwoodpermissionpolicy', verbose_name='Custom Policy')),
                ('updated_by', models.ForeignKey(blank=True, help_text='Updated By', on_delete=django.db.models.deletion.CASCADE, related_name='permission_user_updated_by_m2m_set', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
                ('user', models.ForeignKey(help_text='Permission Group to apply policy', on_delete=django.db.models.deletion.CASCADE, related_name='api_permission_set', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Permission Policy -> User',
                'verbose_name_plural': 'Permission Policy -> User',
                'db_table': 'api_permission__policy_user_m2m',
                'unique_together': {('user', 'custom_policy', 'general_policy')},
            },
        ),
        migrations.CreateModel(
            name='PumpwoodPermissionPolicyGroupM2M',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('general_policy', models.TextField(choices=[('read', 'Read'), ('write', 'Write'), ('custom', 'Custom')], default='no_change', help_text='Read/Write general permission', verbose_name='General Permission')),
                ('extra_info', models.JSONField(blank=True, default=dict, encoder=pumpwood_communication.serializers.PumpWoodJSONEncoder, help_text='Other information that can be usefull', verbose_name='Extra info')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Updated At', verbose_name='Updated At')),
                ('custom_policy', models.ForeignKey(help_text='Pemission Policy that will be applied to the group', on_delete=django.db.models.deletion.CASCADE, related_name='policy_group_set', to='api_permission.pumpwoodpermissionpolicy', verbose_name='Group')),
                ('group', models.ForeignKey(help_text='Permission Group to apply policy', on_delete=django.db.models.deletion.CASCADE, related_name='permission_set', to='api_permission.pumpwoodpermissiongroup', verbose_name='Group')),
                ('updated_by', models.ForeignKey(blank=True, help_text='Updated By', on_delete=django.db.models.deletion.CASCADE, related_name='permission_group_updated_by_m2m_set', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Permission Policy -> Group',
                'verbose_name_plural': 'Permission Policy -> Group',
                'db_table': 'api_permission__policy_group_m2m',
                'unique_together': {('group', 'custom_policy', 'general_policy')},
            },
        ),
        migrations.CreateModel(
            name='PumpwoodPermissionPolicyAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(help_text='Route action to which apply permission', max_length=154, verbose_name='Route action')),
                ('permission', models.TextField(choices=[('allow', 'Allow'), ('deny', 'Deny')], help_text='If user can run or not this action', verbose_name='Allow/Deny')),
                ('extra_info', models.JSONField(blank=True, default=dict, encoder=pumpwood_communication.serializers.PumpWoodJSONEncoder, help_text='Other information that can be usefull', verbose_name='Extra info.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Updated At', verbose_name='Updated At')),
                ('policy', models.ForeignKey(help_text='Permission', on_delete=django.db.models.deletion.CASCADE, related_name='action_set', to='api_permission.pumpwoodpermissionpolicy', verbose_name='Policy')),
                ('updated_by', models.ForeignKey(blank=True, help_text='Updated By', on_delete=django.db.models.deletion.CASCADE, related_name='policy_action_updated_by_set', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Custom Action Policy',
                'verbose_name_plural': 'Custom Action Policies',
                'db_table': 'api_permission__policy_action',
                'unique_together': {('policy', 'action')},
            },
        ),
    ]
