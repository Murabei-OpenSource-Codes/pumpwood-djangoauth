# Generated by Django 5.1.3 on 2025-02-17 15:01

import django.db.models.deletion
import pumpwood_communication.serializers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('groups', '0002_migrate_group_data'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PumpwoodRowPermissionPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(help_text='A short description of the row permission policy.', unique=True, verbose_name='Description')),
                ('notes', models.TextField(blank=True, default='', help_text='A long description of the row permission policy.', verbose_name='Notes')),
                ('dimensions', models.JSONField(blank=True, default=dict, encoder=pumpwood_communication.serializers.PumpWoodJSONEncoder, help_text='Dictionary of tags to help organization', verbose_name='Dimentions')),
                ('can_retrieve', models.TextField(choices=[('allow', 'Allow'), ('deny', 'Deny'), ('no_change', 'No change')], default='no_change', help_text='Permission to retrive row data', verbose_name='Can retrieve?')),
                ('can_update', models.TextField(choices=[('allow', 'Allow'), ('deny', 'Deny'), ('no_change', 'No change')], default='no_change', help_text='Permission to update row data', verbose_name='Can update?')),
                ('can_delete', models.TextField(choices=[('allow', 'Allow'), ('deny', 'Deny'), ('no_change', 'No change')], default='no_change', help_text='Permission to delete row', verbose_name='Can Delete?')),
                ('extra_info', models.JSONField(blank=True, default=dict, encoder=pumpwood_communication.serializers.PumpWoodJSONEncoder, help_text='Other information that can be usefull', verbose_name='Extra info.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Updated At', verbose_name='Updated At')),
                ('updated_by', models.ForeignKey(blank=True, help_text='Updated By', on_delete=django.db.models.deletion.CASCADE, related_name='row_permission_policy_set', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Row Permission Policy',
                'verbose_name_plural': 'Row Permission Policies',
                'db_table': 'row_permission__policy',
            },
        ),
        migrations.CreateModel(
            name='PumpwoodRowPermissionPolicyGroupM2M',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.IntegerField(default=0, help_text='Policy priority, lower number will have precedence', verbose_name='Policy priority')),
                ('extra_info', models.JSONField(blank=True, default=dict, encoder=pumpwood_communication.serializers.PumpWoodJSONEncoder, help_text='Other information that can be usefull', verbose_name='Extra info')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Updated At', verbose_name='Updated At')),
                ('group', models.ForeignKey(help_text='Permission Group to apply policy', on_delete=django.db.models.deletion.CASCADE, related_name='permission_set', to='groups.pumpwoodusergroup', verbose_name='Group')),
                ('policy', models.ForeignKey(help_text='Permission Group to apply policy', on_delete=django.db.models.deletion.CASCADE, related_name='permission_set', to='row_permission.pumpwoodrowpermissionpolicy', verbose_name='Group')),
                ('updated_by', models.ForeignKey(blank=True, help_text='Updated By', on_delete=django.db.models.deletion.CASCADE, related_name='row_permission_group_updated_by_m2m_set', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Row permission Policy -> Group',
                'verbose_name_plural': 'Row permission Policy -> Group',
                'db_table': 'row_permission__policy_group_m2m',
            },
        ),
        migrations.CreateModel(
            name='PumpwoodPermissionPolicyUserM2M',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.IntegerField(default=0, help_text='Policy priority, lower number will have precedence', verbose_name='Policy priority')),
                ('extra_info', models.JSONField(blank=True, default=dict, encoder=pumpwood_communication.serializers.PumpWoodJSONEncoder, help_text='Other information that can be usefull', verbose_name='Extra info.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Updated At', verbose_name='Updated At')),
                ('updated_by', models.ForeignKey(blank=True, help_text='Updated By', on_delete=django.db.models.deletion.CASCADE, related_name='row_permission_user_updated_by_m2m_set', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
                ('user', models.ForeignKey(help_text='Row Permission user to apply policy', on_delete=django.db.models.deletion.CASCADE, related_name='row_permission_set', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('policy', models.ForeignKey(blank=True, help_text='Row policy that will be applied to the group', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='policy_user_set', to='row_permission.pumpwoodrowpermissionpolicygroupm2m', verbose_name='Row Policy')),
            ],
            options={
                'verbose_name': 'Row permission Policy -> User',
                'verbose_name_plural': 'Row permission Policy -> User',
                'db_table': 'row_permission__policy_user_m2m',
            },
        ),
        migrations.CreateModel(
            name='PumpwoodRowPermissionTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(help_text='A short description of the tag.', unique=True, verbose_name='Description')),
                ('notes', models.TextField(blank=True, default='', help_text='A long description of the tag.', verbose_name='Notes')),
                ('dimensions', models.JSONField(blank=True, default=dict, encoder=pumpwood_communication.serializers.PumpWoodJSONEncoder, help_text='Dictionary of tags to help organization', verbose_name='Dimentions')),
                ('extra_info', models.JSONField(blank=True, default=dict, encoder=pumpwood_communication.serializers.PumpWoodJSONEncoder, help_text='Other information that can be usefull', verbose_name='Extra info.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Updated At', verbose_name='Updated At')),
                ('updated_by', models.ForeignKey(blank=True, help_text='Updated By', on_delete=django.db.models.deletion.CASCADE, related_name='row_permission_tag_set', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Row permission tag',
                'verbose_name_plural': 'Row permission tags',
                'db_table': 'row_permission__tag',
            },
        ),
    ]
