# Generated by Django 5.2.3 on 2025-07-01 16:46

import django.db.models.deletion
import pumpwood_communication.serializers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('groups', '0003_alter_pumpwoodusergroupm2m_group_and_more'),
        ('row_permission', '0003_rename_pumpwoodpermissionpolicyuserm2m_pumpwoodrowpermissionpolicyuserm2m'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='pumpwoodrowpermissionpolicygroupm2m',
            name='policy',
        ),
        migrations.RemoveField(
            model_name='pumpwoodrowpermissionpolicygroupm2m',
            name='group',
        ),
        migrations.RemoveField(
            model_name='pumpwoodrowpermissionpolicygroupm2m',
            name='updated_by',
        ),
        migrations.RemoveField(
            model_name='pumpwoodrowpermissionpolicyuserm2m',
            name='policy',
        ),
        migrations.RemoveField(
            model_name='pumpwoodrowpermissiontag',
            name='updated_by',
        ),
        migrations.RemoveField(
            model_name='pumpwoodrowpermissionpolicyuserm2m',
            name='priority',
        ),
        migrations.AlterModelTable(
            name='pumpwoodrowpermissionpolicyuserm2m',
            table='row_permission__user_m2m',
        ),
        migrations.CreateModel(
            name='PumpwoodRowPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(help_text='A short description of permission.', unique=True, verbose_name='Description')),
                ('notes', models.TextField(blank=True, default='', help_text='A long description of permission.', verbose_name='Notes')),
                ('dimensions', models.JSONField(blank=True, default=dict, encoder=pumpwood_communication.serializers.PumpWoodJSONEncoder, help_text='Dictionary of tags to help organization', verbose_name='Dimentions')),
                ('extra_info', models.JSONField(blank=True, default=dict, encoder=pumpwood_communication.serializers.PumpWoodJSONEncoder, help_text='Other information that can be usefull', verbose_name='Extra info.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Updated At', verbose_name='Updated At')),
                ('updated_by', models.ForeignKey(blank=True, help_text='Updated By', on_delete=django.db.models.deletion.CASCADE, related_name='row_permission_tag_set', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Row permission',
                'verbose_name_plural': 'Row permissions',
                'db_table': 'row_permission__description',
            },
        ),
        migrations.AddField(
            model_name='pumpwoodrowpermissionpolicyuserm2m',
            name='row_permission',
            field=models.ForeignKey(blank=True, help_text='Row policy that will be applied to the group', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_set', to='row_permission.pumpwoodrowpermission', verbose_name='Row Policy'),
        ),
        migrations.CreateModel(
            name='PumpwoodRowPermissionGroupM2M',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extra_info', models.JSONField(blank=True, default=dict, encoder=pumpwood_communication.serializers.PumpWoodJSONEncoder, help_text='Other information that can be usefull', verbose_name='Extra info')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Updated At', verbose_name='Updated At')),
                ('group', models.ForeignKey(help_text='User Group to apply policy', on_delete=django.db.models.deletion.CASCADE, related_name='row_permission_set', to='groups.pumpwoodusergroup', verbose_name='Group')),
                ('row_permission', models.ForeignKey(help_text='Row permission Group to apply policy', on_delete=django.db.models.deletion.CASCADE, related_name='group_set', to='row_permission.pumpwoodrowpermission', verbose_name='Group')),
                ('updated_by', models.ForeignKey(blank=True, help_text='Updated By', on_delete=django.db.models.deletion.CASCADE, related_name='row_permission_group_updated_by_m2m_set', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Row permission Policy -> Group',
                'verbose_name_plural': 'Row permission Policy -> Group',
                'db_table': 'row_permission__group_m2m',
            },
        ),
        migrations.DeleteModel(
            name='PumpwoodRowPermissionPolicy',
        ),
        migrations.DeleteModel(
            name='PumpwoodRowPermissionPolicyGroupM2M',
        ),
        migrations.DeleteModel(
            name='PumpwoodRowPermissionTag',
        ),
    ]
